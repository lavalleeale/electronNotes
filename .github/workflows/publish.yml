name: Publish

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest]

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v1
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
      - name: Update Build Number
        env:
          TAG_NAME: ${{ github.ref }}
          RUN_ID: ${{ github.run_id }}
        run: |
          export CLEAN_TAG=$(echo $TAG_NAME | sed -e 's/refs\/tags\/v//')
          sed -i '' -e "s/GITHUB_CI_VERSION/$CLEAN_TAG/g" src/package.json
      - name: Install Node, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 15

      - name: Install dependencies
        run: |
          yarn install

      - name: Publish releases
        env:
          # These values are used for auto updates signing
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          # This is used for uploading release assets to github
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          yarn postinstall && yarn build && yarn electron-builder --publish always --win --mac --linux
